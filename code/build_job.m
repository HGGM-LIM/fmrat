function job=build_job(paths,onsets, duration,rp,dest,mask, covariable, TR,defs)
                        
% FUNCTION build_job.m 
% Builds the job structure that will later be executed by spm_jobman.m



     %=======================================================================
    % Build job
    %=======================================================================
    timing  =   struct(                                                     ...
        'units',        'scans',                                            ...
        'RT',           TR/1000,                                            ...
        'fmri_t',       32,                                                 ...    
        'fmri_t0',      16                                                  ...        
        );
    
    %-----------------------------------------------------------------------
    % HRF
    % ----------------------------------------------------------------------
    % Squared
    % bases   =  struct('none',[]);

    %human
    % user_hrf        =   [0;6.18095720436466e-09;1.80090418490259e-07;1.24517902065679e-06;4.77760642667900e-06;1.32753300600801e-05;3.00771339634428e-05;5.91909473142312e-05;0.000105075125610768;0.000172404033583097;0.000265839656760149;0.000389823562106392;0.000548397899156818;0.000745059927788047;0.000982651485698714;0.00126328262866280;0.00158828719423538;0.00195820709589386;0.00237280162101323;0.00283107777920855;0.00333133774485916;0.00387123959363567;0.00444786779623143;0.00505781026340067;0.00569723910430791;0.00636199264213753;0.00704765660999175;0.00774964281425517;0.00846326389356975;0.00918380311408220;0.00990657842273666;0.0106270002288855;0.0113406226004752;0.0120431877455899;0.0127306638049027;0.0133992761077561;0.0140455321465592;0.0146662406035077;0.0152585248228426;0.0158198311634831;0.0163479326932967;0.0168409286997531;0.0172972404943488;0.0177156039818791;0.0180950594520992;0.0184349390320896;0.0187348522140710;0.0189946698466778;0.0192145069488261;0.0193947046751436;0.0195358117312269;0.0196385655063320;0.0197038731609941;0.0197327928779104;0.0197265154565015;0.0196863464051266;0.0196136886601426;0.0195100260379577;0.0193769075050138;0.0192159323312539;0.0190287361750804;0.0188169781320575;0.0185823287655898;0.0183264591254491;0.0180510307492430;0.0177576866326143;0.0174480431460414;0.0171236828694682;0.0167861483105265;0.0164369364677110;0.0160774941964488;0.0157092143334415;0.0153334325328864;0.0149514247670933;0.0145644054435289;0.0141735260903678;0.0137798745631209;0.0133844747258024;0.0129882865612989;0.0125922066670838;0.0121970690941170;0.0118036464886308;0.0114126514985071;0.0110247384080358;0.0106405049670046;0.0102604943822528;0.00988519744202213;0.00951505474562007;0.00915045901306957;0.00879175745152599;0.00843925415729548;0.00809321253427406;0.00775385771153082;0.00742137894458600;0.00709593198666831;0.00677764141788148;0.00646660292176192;0.00616288550016353;0.00586653361876975;0.00557756927679931;0.00529599399564758;0.00502179072228957;0.00475492564426698;0.00449534991399247;0.00424300128093281;0.00399780563098221;0.00375967843301225;0.00352852609318698;0.00330424721816798;0.00308673378880481;0.00287587224631820;0.00267154449333817;0.00247362881246140;0.00228200070524735;0.00209653365477890;0.00191709981508241;0.00174357063082885;0.00157581739083167;0.00141371171891807;0.00125712600578274;0.00110593378543924;0.000960010059866111;0.000819231575407208;0.000683477054428123;0.000552627385657421;0.000426565776554149;0.000305177870943020;0.000188351835049141;7.59784149451178e-05;-3.20490317019016e-05;-0.000135834526826849;-0.000235479483486528;-0.000331082735219305;-0.000422740580902661;-0.000510546842906502;-0.000594592936481733;-0.000674967948462356;-0.000751758723498059;-0.000825049956169827;-0.000894924287473311;-0.000961462404284045;-0.00102474314054380;-0.00108484357902829;-0.00114183915267242;-0.00119580374454068;-0.00124680978563720;-0.00129492834984969;-0.00134022924541886;-0.00138278110241341;-0.00142265145577745;-0.00145990682359447;-0.00149461278028823;-0.00152683402454752;-0.00155663444182653;-0.00158407716133068;-0.00160922460744988;-0.00163213854565129;-0.00165288012288588;-0.00167150990260327;-0.00168808789450326;-0.00170267357918378;-0.00171532592787164;-0.00172610341744467;-0.00173506404097448;-0.00174226531403378;-0.00174776427702649;-0.00175161749380725;-0.00175388104686611;-0.00175461052935740;-0.00175386103425492;-0.00175168714091587;-0.00174814289933436;-0.00174328181236167;-0.00173715681616616;-0.00172982025919841;-0.00172132387992052;-0.00171171878354981;-0.00170105541805624;-0.00168938354964454;-0.00167675223793930;-0.00166320981108038;-0.00164880384092403;-0.00163358111853253;-0.00161758763012250;-0.00160086853362997;-0.00158346813603687;-0.00156542987159109;-0.00154679628104039;-0.00152760899198713;-0.00150790870045900;-0.00148773515377942;-0.00146712713480976;-0.00144612244762306;-0.00142475790466090;-0.00140306931541180;-0.00138109147664184;-0.00135885816419802;-0.00133640212639587;-0.00131375507899529;-0.00129094770175940;-0.00126800963658568;-0.00124496948719038;-0.00122185482032162;-0.00119869216847080;-0.00117550703404659;-0.00115232389497100;-0.00112916621165305;-0.00110605643529136;-0.00108301601745404;-0.00106006542088086;-0.00103722413145090;-0.00101451067125653;-0.000991942612722109;-0.000969536593706316;-0.000947308333523934;-0.000925272649824235;-0.000903443476261035;-0.000881833880890954;-0.000860456085236017;-0.000839321483946695;-0.000818440665003539;-0.000797823430395085;-0.000777478817212063;-0.000757415119098103;-0.000737639907999762;-0.000718160056159431;-0.000698981758296625;-0.000680110553925371;-0.000661551349756973;-0.000643308442139342;-0.000625385539486652;-0.000607785784654758;-0.000590511777220105;-0.000573565595622332;-0.000556948819132348;-0.000540662549610714;-0.000524707433022689;-0.000509083680678832;-0.000493791090172168;-0.000478829065985238;-0.000464196639742101;-0.000449892490083006;-0.000435914962140805;-0.000422262086600986;-0.000408931598328418;-0.000395920954546138;-0.000383227352553411;-0.000370847746971842;-0.000358778866510029;-0.000347017230239159;-0.000335559163373058;-0.000324400812548107;-0.000313538160599587;-0.000302967040832500;-0.000292683150786075;-0.000282682065492580;-0.000272959250231824;-0.000263510072784268;-0.000254329815186187;-0.000245413684991673;-0.000236756826046738;-0.000228354328781912;-0.000220201240030211;-0.000212292572378146;-0.000204623313058025;-0.000197188432390308;-0.000189982891785357;-0.000183001651314242;-0.000176239676858787;-0.000169691946851237;-0.000163353458614347;-0.000157219234312850;-0.000151284326527493;-0.000145543823463016;-0.000139992853801509;-0.000134626591212721;-0.000129440258532948;-0.000124429131624109;-0.000119588542924609;-0.000114913884703596;-0.000110400612030123;-0.000106044245468595;-0.000101840373511858;-9.77846547630652e-05;-9.38728198773656e-05;-9.01006732742615e-05;-8.64640946312737e-05;-8.29590401694393e-05;-7.95815437408386e-05;-7.63277177282174e-05;-7.31937537664886e-05;-7.01759232956907e-05;-6.72705779546878e-05;-6.44741498246837e-05;-6.17831515313473e-05;-5.91941762140679e-05;-5.67038973706267e-05;-5.43090685852697e-05;-5.20065231479056e-05;-4.97931735719149e-05;-4.76660110177232e-05;-4.56221046290872e-05;-4.36586007887412e-05;-4.17727222997893e-05;-3.99617674989718e-05;-3.82231093076864e-05;-3.65541942263670e-05;-3.49525412775956e-05;-3.34157409030557e-05;-3.19414538192190e-05;-3.05274098363993e-05;-2.91714066455820e-05;-2.78713085772303e-05;-2.66250453360157e-05;-2.54306107152472e-05;-2.42860612945306e-05;-2.31895151240143e-05;-2.21391503983658e-05;-2.11332041234439e-05;-2.01699707784464e-05;-1.92478009761404e-05;-1.83651001236001e-05;-1.75203270857348e-05;-1.67119928537098e-05;-1.59386592202338e-05;-1.51989374635173e-05;-1.44914870415916e-05;-1.38150142985307e-05;-1.31682711839893e-05;-1.25500539873645e-05;-1.19592020877528e-05;-1.13945967207800e-05;-1.08551597632660e-05;-1.03398525365966e-05;-9.84767462956520e-06;-9.37766274138027e-06;-8.92888954542224e-06;-8.50046257427694e-06;-8.09152312648567e-06;-7.70124519537927e-06;-7.32883442030463e-06;-6.97352706048098e-06];
    % bases       =   struct('user',struct('user_bf',(user_hrf),'length',1,'order',1));
    %bases = struct('hrf',struct('derivs',[1,1]));

    %user hrf
    if ~isempty(defs.user_hrf)
        hrf             =   defs.user_hrf;
%         xx      =   linspace(0,defs.t_max,ceil(defs.t_max*16/timing.RT));
%         yy      =   spline(linspace(0,defs.t_max,length(hrf)),hrf,xx);    
        bases           =   struct('user',struct('user_bf',(hrf)','length',defs.t_max,'order',1));
        timing.fmri_t   =   floor(length(hrf)/(defs.t_max/(TR/1000)));
        timing.fmri_t0  =   timing.fmri_t/2;        
    else 
        bases   =  struct('none',[]);
%         duration    =   duration-1;        
    end
    %-----------------------------------------------------------------------    
%     onsets      =   onsets+2;
    cond        =   struct(                                                     ...
        'name',         'Fmri_session',                                     ...
        'onset',        onsets,                                             ...
        'duration',     duration,                                           ...
        'tmod',         0,                                                  ...
        'pmod',         struct([]),                                         ...
        'orth',         []                                                  ...
        );
    vals            =   {};
    str             =   {};
    if defs.skip>0
        rgss                =   struct();
        for i=1:size(rp,2)
            rgss(i).name    =   num2str(i);
            rgss(i).val     =   rp(:,i);
        end
        multireg            =   {''};        
    else
        rgss                =  struct([]);
        multireg            =   cellstr(rp);        
    end
    if ~isempty(covariable) && (nnz(covariable)>0)
        for i=1:size(covariable,2)
           str{i}   =   ['cov' num2str(i)]; 
           vals{i}  =   covariable(:,i);
        end
        rgss  =   struct('name',str,'val',vals); 
    end
    sess        =   struct(                                                 ...
        'scans',        {paths},                                            ...
        'cond',         cond,                                               ...
        'multi',        {cell(1)},                                          ...    
        'regress',      rgss,                                               ...        
        'multi_reg',    {multireg},                                         ...
        'hpf',          defs.cutoff                                         ...
        );
    fid = fopen(mask,'r');
    if fid<1
        em  =   {''};
    elseif ischar(mask)
        em  =   cellstr(mask); 
    end
    


        job     =   struct(                                                            ...
        'spmmat',       {cellstr([dest filesep 'SPM.mat'])},                ...
        'dir',          {cellstr(dest)},                                    ...
        'scans',        {paths},                                            ...
        'timing',       timing,                                             ...   
        'sess',         sess,                                               ...
        'fact',         struct([]),                                         ...
        'bases',        bases,                                              ...
        'volt',         1,                                                  ...
        'global',       'None',                                             ...
        'mask',         {em},                                               ...
        'cvi',          'AR(1)',                                            ...
        'mthresh',      0.8                                                 ...        
    );    
    save('job.mat','job');

end