function job=build_job(an_mode,paths,onsets, Nstim,rp,dest,mask,paths_on,paths_off,covariable)

% FUNCTION build_job.m 
% Builds the job structure 


if an_mode

     %=======================================================================
    % Build job
    %=======================================================================
    timing  =   struct(                                                    ...
        'units',        'scans',                                            ...
        'RT',           3,                                                  ...
        'fmri_t',       16,                                                 ...    
        'fmri_t0',      1                                                   ...        
        );
    onsets  =   onsets;
    cond    =   struct(                                                     ...
        'name',         'Electrical',                                       ...
        'onset',        onsets,                                             ...
        'duration',     Nstim,                                              ...
        'tmod',         0,                                                  ...
        'pmod',         struct([])                                          ...
        );
    multireg	=   '';
    multireg=cellstr(rp);
    sess        =   struct(                                                 ...
        'scans',        {paths},                                            ...
        'cond',         cond,                                               ...
        'multi',        {cell(1)},                                          ...    
        'regress',      struct([]),                                         ...        
        'multi_reg',    {multireg},                                         ...
        'hpf',          128                                                 ...
        );
    if isempty(mask) 
        em  =   {''}; 
    elseif ischar(mask)
        em  =   cellstr(mask); 
    end
    %bases = struct('hrf',struct('derivs',[1,1]));
    bases   =   struct('fir',struct('length',1,'order',1));
%     bases = struct('hrf',struct('derivs',[0,0]));
    job     =   struct(                                                            ...
        'spmmat',       {cellstr([dest filesep 'SPM.mat'])},                ...
        'dir',          {cellstr(dest)},                                    ...
        'scans',        {paths},                                            ...
        'timing',       timing,                                             ...   
        'sess',         sess,                                               ...
        'fact',         struct([]),                                         ...
        'bases',        bases,                                              ...
        'volt',         1,                                                  ...
        'global',       'None',                                             ...
        'mask',         {em},                                               ...
        'cvi',          'AR(1)'                                             ...
    );    
    
    
    
else
    t2  =   struct(...   
        'scans1',       [],...
        'scans2',       [],...
        'dept',         0,...
        'variance',     1,...
        'gmsca',        0,...
        'ancova',       0 ...
    );
t2.scans1   =   paths_off;
t2.scans2   =   paths_on;
    cov     =   struct(...
        'c',            covariable',...
        'cname',        'rr',...
        'iCFI',         1,...
        'iCC',          5 ...
    );
    if isempty(mask) em={''}; 
    elseif isstruct(mask)
        em  =   cellstr(mask.fname); 
    elseif ischar(mask)
        em  =   cellstr(mask);
    end
    masking     =   struct( ...
        'tm',           struct('tm_none',[]),...
        'im',           1,...
        'em',           {em} ...
    );
    globalc     =   struct('g_omit',[]);
    globalm     =   struct('gmsca',struct('gmsca_no',[]),'glonorm',1);
    dir         =   {dest};
    job         =   struct( 'des',   struct('t2',t2), 'cov',cov,'masking',masking,'globalc',globalc,'globalm',globalm,'dir',{dir});
end
end